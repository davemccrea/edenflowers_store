defmodule Edenflowers.Repo.Migrations.Initial do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text
      add :email, :citext, null: false
      add :newsletter_opt_in, :boolean, default: false
      add :promotion_claimed, :boolean, default: false
    end

    create unique_index(:users, [:email], name: "users_unique_email_index")

    create table(:tokens, primary_key: false) do
      add :jti, :text, null: false, primary_key: true
      add :subject, :text, null: false
      add :expires_at, :utc_datetime, null: false
      add :purpose, :text, null: false
      add :extra_data, :map

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:tax_rates, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :percentage, :decimal, null: false
      add :archived_at, :utc_datetime_usec
    end

    create unique_index(:tax_rates, [:name], name: "tax_rates_unique_name_index")

    create table(:promotions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :code, :citext, null: false
      add :discount_percentage, :decimal, null: false
      add :minimum_cart_total, :decimal, null: false
      add :start_date, :date
      add :expiration_date, :date
      add :usage_limit, :bigint
    end

    create unique_index(:promotions, [:code], name: "promotions_unique_code_index")

    create table(:products, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :image_slug, :text, null: false
      add :description, :text, null: false
      add :draft, :boolean, null: false, default: true

      add :tax_rate_id,
          references(:tax_rates,
            column: :id,
            name: "products_tax_rate_id_fkey",
            type: :uuid,
            prefix: "public"
          ), null: false

      add :product_category_id, :uuid, null: false
    end

    create table(:product_variants, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :price, :decimal, null: false
      add :size, :text
      add :image_slug, :text, null: false
      add :stock_trackable, :boolean, default: false
      add :stock_quantity, :bigint
      add :draft, :boolean, null: false, default: true

      add :product_id,
          references(:products,
            column: :id,
            name: "product_variants_product_id_fkey",
            type: :uuid,
            prefix: "public"
          ), null: false
    end

    create table(:product_fulfillment_options, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :product_id,
          references(:products,
            column: :id,
            name: "product_fulfillment_options_product_id_fkey",
            type: :uuid,
            prefix: "public"
          ), primary_key: true, null: false

      add :fulfillment_option_id, :uuid, null: false, primary_key: true
    end

    create index(:product_fulfillment_options, [:fulfillment_option_id])

    create index(:product_fulfillment_options, [:product_id])

    create table(:product_categories, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:products) do
      modify :product_category_id,
             references(:product_categories,
               column: :id,
               name: "products_product_category_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:products, [:name], name: "products_unique_name_index")

    alter table(:product_categories) do
      add :name, :text, null: false
    end

    create table(:orders, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :order_number, :bigserial, null: false
      add :step, :bigint, default: 1
      add :state, :text, default: "checkout"
      add :ordered_at, :utc_datetime
      add :payment_status, :text, default: "pending"
      add :fulfillment_status, :text, default: "pending"
      add :customer_name, :text
      add :customer_email, :text
      add :gift, :boolean, default: false
      add :gift_message, :text
      add :recipient_name, :text
      add :recipient_phone_number, :text
      add :delivery_address, :text
      add :delivery_instructions, :text
      add :fulfillment_date, :date
      add :fulfillment_amount, :decimal
      add :calculated_address, :text
      add :here_id, :text
      add :distance, :bigint
      add :position, :text
      add :payment_intent_id, :text
      add :locale, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "orders_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :fulfillment_option_id, :uuid
      add :promotion_id, :uuid
    end

    create table(:opening_hours, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    create table(:line_items, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :quantity, :bigint, default: 1
      add :unit_price, :decimal, null: false
      add :tax_rate, :decimal, null: false
      add :product_name, :text, null: false
      add :product_image_slug, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :order_id,
          references(:orders,
            column: :id,
            name: "line_items_order_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ), null: false

      add :product_id,
          references(:products,
            column: :id,
            name: "line_items_product_id_fkey",
            type: :uuid,
            prefix: "public"
          ), null: false

      add :product_variant_id,
          references(:product_variants,
            column: :id,
            name: "line_items_product_variant_id_fkey",
            type: :uuid,
            prefix: "public"
          ), null: false
    end

    create unique_index(:line_items, [:order_id, :product_variant_id],
             name: "line_items_unique_product_variant_index"
           )

    create table(:fulfillment_options, primary_key: false) do
      add :translations, :map
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:product_fulfillment_options) do
      modify :fulfillment_option_id,
             references(:fulfillment_options,
               column: :id,
               name: "product_fulfillment_options_fulfillment_option_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:orders) do
      modify :fulfillment_option_id,
             references(:fulfillment_options,
               column: :id,
               name: "orders_fulfillment_option_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :promotion_id,
             references(:promotions,
               column: :id,
               name: "orders_promotion_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:fulfillment_options) do
      add :name, :text, null: false
      add :minimum_cart_total, :decimal, default: "0"
      add :fulfillment_method, :text, null: false
      add :rate_type, :text, null: false
      add :base_price, :decimal, null: false
      add :price_per_km, :decimal
      add :free_dist_km, :bigint
      add :max_dist_km, :bigint
      add :same_day, :boolean, default: false
      add :order_deadline, :time
      add :monday, :boolean, default: true
      add :tuesday, :boolean, default: true
      add :wednesday, :boolean, default: true
      add :thursday, :boolean, default: true
      add :friday, :boolean, default: true
      add :saturday, :boolean, default: true
      add :sunday, :boolean, default: false
      add :enabled_dates, {:array, :date}, default: []
      add :disabled_dates, {:array, :date}, default: []

      add :tax_rate_id,
          references(:tax_rates,
            column: :id,
            name: "fulfillment_options_tax_rate_id_fkey",
            type: :uuid,
            prefix: "public"
          ), null: false
    end

    create unique_index(:fulfillment_options, [:name],
             name: "fulfillment_options_unique_name_index"
           )

    create table(:courses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :description, :text, null: false
      add :location_name, :text, null: false
      add :location_address, :text, null: false
      add :image_slug, :text, null: false
      add :date, :date, null: false
      add :start_time, :time, null: false
      add :end_time, :time, null: false
      add :register_before, :date, null: false
      add :total_places, :bigint, null: false
      add :price, :decimal, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:course_registrations, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :email, :text, null: false
      add :status, :text, default: "pending"

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "course_registrations_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :course_id,
          references(:courses,
            column: :id,
            name: "course_registrations_course_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:course_registrations, "course_registrations_user_id_fkey")

    drop constraint(:course_registrations, "course_registrations_course_id_fkey")

    drop table(:course_registrations)

    drop table(:courses)

    drop_if_exists unique_index(:fulfillment_options, [:name],
                     name: "fulfillment_options_unique_name_index"
                   )

    drop constraint(:fulfillment_options, "fulfillment_options_tax_rate_id_fkey")

    alter table(:fulfillment_options) do
      remove :tax_rate_id
      remove :disabled_dates
      remove :enabled_dates
      remove :sunday
      remove :saturday
      remove :friday
      remove :thursday
      remove :wednesday
      remove :tuesday
      remove :monday
      remove :order_deadline
      remove :same_day
      remove :max_dist_km
      remove :free_dist_km
      remove :price_per_km
      remove :base_price
      remove :rate_type
      remove :fulfillment_method
      remove :minimum_cart_total
      remove :name
    end

    drop constraint(:orders, "orders_fulfillment_option_id_fkey")

    drop constraint(:orders, "orders_promotion_id_fkey")

    alter table(:orders) do
      modify :promotion_id, :uuid
      modify :fulfillment_option_id, :uuid
    end

    drop constraint(
           :product_fulfillment_options,
           "product_fulfillment_options_fulfillment_option_id_fkey"
         )

    alter table(:product_fulfillment_options) do
      modify :fulfillment_option_id, :uuid
    end

    drop table(:fulfillment_options)

    drop_if_exists unique_index(:line_items, [:order_id, :product_variant_id],
                     name: "line_items_unique_product_variant_index"
                   )

    drop constraint(:line_items, "line_items_order_id_fkey")

    drop constraint(:line_items, "line_items_product_id_fkey")

    drop constraint(:line_items, "line_items_product_variant_id_fkey")

    drop table(:line_items)

    drop table(:opening_hours)

    drop constraint(:orders, "orders_user_id_fkey")

    drop table(:orders)

    alter table(:product_categories) do
      remove :name
    end

    drop_if_exists unique_index(:products, [:name], name: "products_unique_name_index")

    drop constraint(:products, "products_product_category_id_fkey")

    alter table(:products) do
      modify :product_category_id, :uuid
    end

    drop table(:product_categories)

    drop constraint(:product_fulfillment_options, "product_fulfillment_options_product_id_fkey")

    drop_if_exists index(:product_fulfillment_options, [:product_id])

    drop_if_exists index(:product_fulfillment_options, [:fulfillment_option_id])

    drop table(:product_fulfillment_options)

    drop constraint(:product_variants, "product_variants_product_id_fkey")

    drop table(:product_variants)

    drop constraint(:products, "products_tax_rate_id_fkey")

    drop table(:products)

    drop_if_exists unique_index(:promotions, [:code], name: "promotions_unique_code_index")

    drop table(:promotions)

    drop_if_exists unique_index(:tax_rates, [:name], name: "tax_rates_unique_name_index")

    drop table(:tax_rates)

    drop table(:tokens)

    drop_if_exists unique_index(:users, [:email], name: "users_unique_email_index")

    drop table(:users)
  end
end
